import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{R as x}from"./index-D4lIrffr.js";import{t as g}from"./bundle-mjs-BJOqOzcM.js";const v={outline:"border border-gray-300 focus:ring-2 focus:ring-blue-500",filled:"bg-gray-100 border-none focus:bg-white focus:ring-2",ghost:"border-none bg-transparent focus:underline"},h={sm:"py-1 px-2 text-sm",md:"py-2 px-3 text-base",lg:"py-3 px-4 text-lg"},t=x.forwardRef(({variant:r="outline",size:m="md",label:o,error:a,leftIcon:l,rightIcon:n,className:u="",...p},f)=>e.jsxs("div",{className:"space-y-1",children:[o&&e.jsx("label",{className:"block text-sm font-medium",children:o}),e.jsxs("div",{className:"relative flex items-center",children:[l&&e.jsx("span",{className:"absolute left-3",children:l}),e.jsx("input",{ref:f,className:g("w-full rounded-md transition-all",v[r],h[m],l?"pl-10":"",n?"pr-10":"",a?"border-red-500 focus:ring-red-500":"",u),"aria-invalid":!!a,...p}),n&&e.jsx("span",{className:"absolute right-3",children:n})]}),a&&e.jsx("p",{className:"text-sm text-red-600",children:a})]}));t.displayName="TextInput";t.__docgenInfo={description:"",methods:[],displayName:"TextInput",props:{variant:{required:!1,tsType:{name:"union",raw:"'outline' | 'filled' | 'ghost'",elements:[{name:"literal",value:"'outline'"},{name:"literal",value:"'filled'"},{name:"literal",value:"'ghost'"}]},description:"",defaultValue:{value:"'outline'",computed:!1}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"",defaultValue:{value:"'md'",computed:!1}},label:{required:!1,tsType:{name:"string"},description:""},error:{required:!1,tsType:{name:"string"},description:""},leftIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},rightIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},className:{defaultValue:{value:"''",computed:!1},required:!1}},composes:["Omit"]};const R={title:"Components/Data Entry/TextInput",component:t,tags:["autodocs"],parameters:{docs:{canvas:{sourceState:"shown"}}}},s={render:r=>e.jsx(t,{...r}),args:{placeholder:"Enter text..."}};var i,d,c;s.parameters={...s.parameters,docs:{...(i=s.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: args => <TextInput {...args} />,
  // Explicit render helps loading
  args: {
    placeholder: 'Enter text...'
  }
}`,...(c=(d=s.parameters)==null?void 0:d.docs)==null?void 0:c.source}}};const T=["Default"];export{s as Default,T as __namedExportsOrder,R as default};
